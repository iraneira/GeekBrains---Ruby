# coding: utf-8

# 2. Методы Ruby Core API
# Fixnum:

# Метод, увеличивающий число на единицу

1.next #=>2

# Метод проверяющий является ли число нулём

0.zero?

# Метод возвращающий модуль числа

3%2

# Float:

# Метод, округляющий вещественное число вниз до целой части

1.2.floor

# Метод, возвращающий результат деления 2-х чисел в виде массива с целой частью и остатком от деления

42.0.divmod 6 #=> [7, 0.0]

# Для класса String:


# Метод, приводящий все символы в строке к нижнему регистру

"hEllO".downcase   #=> "hello"

# Метод, возвращающий следующий символ за текущим (согласно кодам ASCII)

"abcd".succ        #=> "abce"

# Метод изменяющий текущий объект строки, путём удаления предшествующих и завершающих пробельных символов

"    hello    ".strip   #=> "hello"

# Для класса Array:


# Метод, удаляющий все встречающиеся элементы в массиве равные заданному

a = [ "a", "b", "b", "b", "c" ]
a.delete("b")                   #=> "b"
a                               #=> ["a", "c"]

# Метод, возвращающий текущий массив с элементами в случайном порядке
a = [ 1, 2, 3 ]           #=> [1, 2, 3]
a.shuffle                 #=> [2, 3, 1]
a                         #=> [1, 2, 3]

# Метод, превращающий массив в строку путём объединения его элементов
[ "a", "b", "c" ].join        #=> "abc"
[ "a", "b", "c" ].join("-")   #=> "a-b-c"

# Для класса Hash:


# Метод, проверяющий наличие заданного ключа в хэше
h = { "a" => 100, "b" => 200, "c" => 300, "d" => 300 }
h.key(200)   #=> "b"
h.key(300)   #=> "c"
h.key(999)   #=> nil

# Метод, объединяющий 2 объекта хэшей
h1 = { "a" => 100, "b" => 200 }
h2 = { "b" => 254, "c" => 300 }
h1.merge(h2)   #=> {"a"=>100, "b"=>254, "c"=>300}
h1.merge(h2){|key, oldval, newval| newval - oldval}
               #=> {"a"=>100, "b"=>54,  "c"=>300}
h1             #=> {"a"=>100, "b"=>200}

# Для класса Range:


# Метод, возвращающий максимальное значение диапазона
(10..20).max    #=> 20

# 3. Модификация кода
results = [10, 2, 5, 12, 11, 11, 4]

x = 1
puts "Количество очков по партиям\n===========================\n\n"
for sum in results
  puts "Партия: #{x} Выпало очков: #{sum}"
  x+=1
end

# 4. Типы данных в реальном мире
#Туристической группы - Hash or Array

#Количества денег на счету в банке - Списка книг и их количества - Hash

#Признака есть ли у человека суперспособности boolean

#Количества соток для участка Fixnum or Float

#Количества очков жизни игрока Fixnum

#Имени пользователя String

#Содержания поста String

#Возрастной категории Range

#Названия социальной сети, которое будет использоваться в коде по всему проекту Symbol

# 5 

class String
  def -(value)
    self.delete(value)
  end
end
puts "Hello, my Ruby world!" - "om"
